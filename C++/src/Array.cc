#include"../include/Array.h"

/********************************************************************* 
 * Data de criacao    : 03/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * alloc : inicializado e alocando o vetor                           * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 * nLin   - numero de linhas                                         *
 * name   - nome do arranjo                                          * 
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------*
 *********************************************************************/
void Array::alloc(const int nLin, string name) {
      
  this->nLin = nLin;
  this->name = name;
  try{
    this->coef = new double[nLin];
  }
  catch (bad_alloc E){
    cout << "Nao ha memoria suficiente" << this->name << endl;
    exit(-1);
  }

}
/********************************************************************/

/********************************************************************* 
 * Data de criacao    : 03/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * getCoef : retorna o coeficiente i                                 * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 * i      - vetor x                                                  *
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------* 
 *********************************************************************/
double Array::getCoef(int i) const{
  return this->coef[ i ];
}
/********************************************************************/

/********************************************************************* 
 * Data de criacao    : 03/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * setCoef : set o coeficiente i                                     * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 * i      - vetor x                                                  *
 * a      - valor do coeficiente                                     * 
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------* 
 *********************************************************************/
void Array::setCoef(int i, double a){
  this->coef[ i ] = a;
}
/********************************************************************/

/*********************************************************************/ 
double* Array::data(void) const{
  return this->coef;
}
/********************************************************************/

/*********************************************************************/ 
ostream& operator<<(ostream& os, Array &x){
  
  int n;

  x.dim(n);

  for (int i = 0; i < n; i++) {
    os << x.name <<"[" << i << "]" << " = " << x.coef[i] << endl;
  }

  return os;
}
/********************************************************************/

/********************************************************************/
void Array::dealloc() {
  
  if(this->coef){
    delete [] this->coef;
    this->coef = nullptr;
  }
}
/********************************************************************/

/********************************************************************/
Array::~Array() {
//cout<< "chamando destrutor para "<< this->name << '.' << endl; 
  this->dealloc();
}
/********************************************************************/

/********************************************************************/
void Array::dim(int &nLin) const{
  
  nLin = this->nLin; 
  
}
/********************************************************************/

/*********************************************************************/ 
double& Array::operator[](const int i) const{
  return this->coef[i];
}
/********************************************************************/

/********************************************************************* 
 * Data de criacao    : 03/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * alloc : inicializado e alocando a matriz                          * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 * nLin   - numero de linhas                                         *
 * nCol   - numero de colunas                                        *
 * name   - nome do arranjo                                          * 
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------* 
 *********************************************************************/
void Array2D::alloc(const int nLin, const int nCol, string name) {
  
  this->nLin = nLin;
  this->nCol = nLin;
  this->name = name;

  try{
    this->coef = new double[nLin*nCol];
  }
  catch (bad_alloc E){
    cout << "Não há memoria suficiente" << this->name << endl;
  }

}
/********************************************************************/

/********************************************************************* 
 * Data de criacao    : 03/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * getCoef : retorna o coeficiente i, j                              * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 * i      - vetor x                                                  *
 * j      - indefinido                                               *
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------* 
 *********************************************************************/
double Array2D::getCoef(int i, int j) const{
  return this->coef[ i * this->nCol + j];
}
/********************************************************************/

/********************************************************************* 
 * Data de criacao    : 03/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * setCoef : set o coeficiente i, j                                  * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 * i      - vetor x                                                  *
 * j      - indefinido                                               *
 * a      - valor do coeficiente                                     * 
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------* 
 *********************************************************************/
void Array2D::setCoef(int i, int j, double a){
  this->coef[ i * this->nCol + j] = a;
}
/********************************************************************/

/********************************************************************* 
 * Data de criacao    : 02/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * loadStore : Calculo do numero numero de load e store              * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 * nLin -> numero de linhas                                          * 
 * nCol -> numero de colunas                                         * 
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 * Numero de load store                                              * 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------* 
 *********************************************************************/
long Array2D::loadStore(void) const{
   return this->nLin*(2*this->nCol-1);
}
/*********************************************************************/  

/********************************************************************* 
 * Data de criacao    : 06/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * FLOPMATVECFULL : Calculo do numero de flops da operacao de matiz  * 
 * por um vetor, onde a matriz e uma matriz densa                    * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 * Numero de flops                                                   * 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------* 
 *********************************************************************/
long Array2D::flopMatVecFull(void) const{
  return this->nLin*(2*this->nCol-1);
}
/*********************************************************************/ 


/********************************************************************* 
 * Data de criacao    : 03/10/2020                                   *
 * Data de modificaco : 00/00/0000                                   *
 *-------------------------------------------------------------------*
 * MATVEC : operacao matriz vetor para matriz cheias                 * 
 *-------------------------------------------------------------------* 
 * Parametros de entrada:                                            * 
 *-------------------------------------------------------------------* 
 * x      - vetor x                                                  *
 * y      - indefinido                                               *
 * transp - matriz transposta                                        * 
 *-------------------------------------------------------------------* 
 * Parametros de saida:                                              * 
 *-------------------------------------------------------------------* 
 * y  - produto vetoria entre a e x                                  * 
 *-------------------------------------------------------------------* 
 * OBS:                                                              * 
 *-------------------------------------------------------------------* 
 *********************************************************************/
Array& Array2D::matVec(Array& x, Array& y, bool transp) const{

  int nl = this->nLin;
  int nc = this->nCol;
  double tmp = 0.e0;
  double *a  = this->data();
  

/*... transposta*/
  if(transp)
    for (int i = 0; i < nc; i++) {
      tmp = 0.e0;
      for (int j = 0; j < nl; j++) 
        tmp += a[j * nl + i] * x[j];
      y[i] = tmp;
    }
/*...................................................................*/

/*...*/
  else
    for (int i = 0; i < nl; i++) {
      tmp = 0.e0;
      for (int j = 0; j < nc; j++) 
        tmp += a[i * nl +  j] * x[j];
      y[i] = tmp;
    }
/*...................................................................*/ 

  return y;

}
/********************************************************************/

/*********************************************************************/ 
ostream& operator<<(ostream& os, Array2D &x){
  
  int nl, nc;

  x.dim(nl, nc);

  for (int i = 0; i < nl; i++)
    for (int j = 0; j < nc; j++)
      os << x.name <<"[" << i << "]" << "[" << i << "]" 
         << " = " << x.coef[i * nl + j] << endl;
  

  return os;
}
/********************************************************************/

/********************************************************************/
void Array2D::dim(int &nLin, int &nCol) const {
  
  nLin = this->nLin;
  nCol = this->nCol; 
  
}
/********************************************************************/

